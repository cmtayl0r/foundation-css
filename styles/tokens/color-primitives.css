/*
================================================================================
COLOR PRIMITIVES
================================================================================
🎨 COMMON CHROMA VALUES BY COLOR FAMILY:

- Blues (210-270°): 0.25 sRGB → 0.40 P3
- Reds (0-30°): 0.37 sRGB → 0.50 P3
- Oranges (30-90°): 0.33 sRGB → 0.45 P3
- Greens (135-180°): 0.35 sRGB → 0.50 P3
- Magentas (300-330°): 0.32 sRGB → 0.45 P3
- Cyans (180-210°): 0.28 sRGB → 0.40 P3

🔬 LIGHTNESS CURVE: Research-based perceptual uniformity
50=98.5%, 100=95%, 200=88%, 300=78%, 400=66%, 500=54%, 600=45%, 700=37%, 800=29%, 900=22%, 950=15%

⚡ CHROMA CURVE: Bell-curve for optimal contrast+vibrancy
50=3%, 100=8%, 200=20%, 300=45%, 400=75%, 500=100%, 600=95%, 700=85%, 800=65%, 900=45%, 950=25%

📋 QUICK USAGE GUIDE:
- Text: 700+on light, 200+on dark (APCA ≥60)
- UI Controls: 600+on light, 300+on dark (APCA ≥45)
- Backgrounds: 50-200 light mode, 800-950 dark mode
- Interactive: 500-700 range with hover+100 steps
================================================================================*/

:root {

  /* ===== BRAND CONFIGURATION ===== */

  /* Adjust these values for your brand, everything else is calculated */
  --brand-hue: 240;
  /* Blue family */
  --brand-chroma-srgb: 0.25;
  /* Conservative for wide compatibility */
  --brand-chroma-p3: 0.40;
  /* Enhanced for modern displays */
  --brand-chroma: var(--brand-chroma-srgb);

  --secondary-hue: 295;
  /* Magenta for clear differentiation */
  --secondary-chroma-srgb: 0.32;
  /* High contrast vs primary */
  --secondary-chroma-p3: 0.45;
  --secondary-chroma: var(--secondary-chroma-srgb);

  --accent-hue: 300;
  /* Bright magenta */
  --accent-chroma-srgb: 0.32;
  /* High contrast */
  --accent-chroma-p3: 0.45;
  --accent-chroma: var(--accent-chroma-srgb);

  --success-hue: 142;
  /* Natural green */
  --success-chroma-srgb: 0.35;
  /* Strong positive signal */
  --success-chroma-p3: 0.50;
  --success-chroma: var(--success-chroma-srgb);

  --warning-hue: 65;
  /* Yellow-orange for attention */
  --warning-chroma-srgb: 0.33;
  /* High visibility */
  --warning-chroma-p3: 0.45;
  --warning-chroma: var(--warning-chroma-srgb);

  --error-hue: 20;
  /* Red-orange for urgency */
  --error-chroma-srgb: 0.37;
  /* Maximum signal strength */
  --error-chroma-p3: 0.50;
  --error-chroma: var(--error-chroma-srgb);

  /* ===== PERCEPTUAL LIGHTNESS STEPS ===== */
  /* Research-based uniform perceived contrast */
  --l-50: 98.5%;
  --l-100: 95%;
  --l-200: 88%;
  --l-300: 78%;
  --l-400: 66%;
  --l-500: 54%;
  --l-600: 45%;
  --l-700: 37%;
  --l-800: 29%;
  --l-900: 22%;
  --l-950: 15%;

  /* ===== CHROMA MULTIPLIERS ===== */
  /* Bell curve for optimal vibrancy + contrast */
  --c-50: 0.03;
  --c-100: 0.08;
  --c-200: 0.20;
  --c-300: 0.45;
  --c-400: 0.75;
  --c-500: 1.00;
  --c-600: 0.95;
  --c-700: 0.85;
  --c-800: 0.65;
  --c-900: 0.45;
  --c-950: 0.25;

  /* ===== PRIMARY BRAND SCALE ===== */
  /* Research-based lightness progression (Stevens' Power Law) */
  /* Each step is visually equidistant for human perception */
  --color-primary-50: oklch(var(--l-50) calc(var(--brand-chroma) * var(--c-50)) var(--brand-hue));
  --color-primary-100: oklch(var(--l-100) calc(var(--brand-chroma) * var(--c-100)) var(--brand-hue));
  --color-primary-200: oklch(var(--l-200) calc(var(--brand-chroma) * var(--c-200)) var(--brand-hue));
  --color-primary-300: oklch(var(--l-300) calc(var(--brand-chroma) * var(--c-300)) var(--brand-hue));
  --color-primary-400: oklch(var(--l-400) calc(var(--brand-chroma) * var(--c-400)) var(--brand-hue));
  --color-primary-500: oklch(var(--l-500) calc(var(--brand-chroma) * var(--c-500)) var(--brand-hue));
  --color-primary-600: oklch(var(--l-600) calc(var(--brand-chroma) * var(--c-600)) var(--brand-hue));
  --color-primary-700: oklch(var(--l-700) calc(var(--brand-chroma) * var(--c-700)) var(--brand-hue));
  --color-primary-800: oklch(var(--l-800) calc(var(--brand-chroma) * var(--c-800)) var(--brand-hue));
  --color-primary-900: oklch(var(--l-900) calc(var(--brand-chroma) * var(--c-900)) var(--brand-hue));
  --color-primary-950: oklch(var(--l-950) calc(var(--brand-chroma) * var(--c-950)) var(--brand-hue));

  /* ===== SECONDARY SCALE ===== */
  --color-secondary-50: oklch(var(--l-50) calc(var(--secondary-chroma) * var(--c-50)) var(--secondary-hue));
  --color-secondary-100: oklch(var(--l-100) calc(var(--secondary-chroma) * var(--c-100)) var(--secondary-hue));
  --color-secondary-200: oklch(var(--l-200) calc(var(--secondary-chroma) * var(--c-200)) var(--secondary-hue));
  --color-secondary-300: oklch(var(--l-300) calc(var(--secondary-chroma) * var(--c-300)) var(--secondary-hue));
  --color-secondary-400: oklch(var(--l-400) calc(var(--secondary-chroma) * var(--c-400)) var(--secondary-hue));
  --color-secondary-500: oklch(var(--l-500) calc(var(--secondary-chroma) * var(--c-500)) var(--secondary-hue));
  --color-secondary-600: oklch(var(--l-600) calc(var(--secondary-chroma) * var(--c-600)) var(--secondary-hue));
  --color-secondary-700: oklch(var(--l-700) calc(var(--secondary-chroma) * var(--c-700)) var(--secondary-hue));
  --color-secondary-800: oklch(var(--l-800) calc(var(--secondary-chroma) * var(--c-800)) var(--secondary-hue));
  --color-secondary-900: oklch(var(--l-900) calc(var(--secondary-chroma) * var(--c-900)) var(--secondary-hue));
  --color-secondary-950: oklch(var(--l-950) calc(var(--secondary-chroma) * var(--c-950)) var(--secondary-hue));

  /* ===== ACCENT SCALE ===== */
  --color-accent-50: oklch(var(--l-50) calc(var(--accent-chroma) * var(--c-50)) var(--accent-hue));
  --color-accent-100: oklch(var(--l-100) calc(var(--accent-chroma) * var(--c-100)) var(--accent-hue));
  --color-accent-200: oklch(var(--l-200) calc(var(--accent-chroma) * var(--c-200)) var(--accent-hue));
  --color-accent-300: oklch(var(--l-300) calc(var(--accent-chroma) * var(--c-300)) var(--accent-hue));
  --color-accent-400: oklch(var(--l-400) calc(var(--accent-chroma) * var(--c-400)) var(--accent-hue));
  --color-accent-500: oklch(var(--l-500) calc(var(--accent-chroma) * var(--c-500)) var(--accent-hue));
  --color-accent-600: oklch(var(--l-600) calc(var(--accent-chroma) * var(--c-600)) var(--accent-hue));
  --color-accent-700: oklch(var(--l-700) calc(var(--accent-chroma) * var(--c-700)) var(--accent-hue));
  --color-accent-800: oklch(var(--l-800) calc(var(--accent-chroma) * var(--c-800)) var(--accent-hue));
  --color-accent-900: oklch(var(--l-900) calc(var(--accent-chroma) * var(--c-900)) var(--accent-hue));
  --color-accent-950: oklch(var(--l-950) calc(var(--accent-chroma) * var(--c-950)) var(--accent-hue));

  /* ===== SUCCESS SCALE ===== */
  --color-success-50: oklch(var(--l-50) calc(var(--success-chroma) * var(--c-50)) var(--success-hue));
  --color-success-100: oklch(var(--l-100) calc(var(--success-chroma) * var(--c-100)) var(--success-hue));
  --color-success-200: oklch(var(--l-200) calc(var(--success-chroma) * var(--c-200)) var(--success-hue));
  --color-success-300: oklch(var(--l-300) calc(var(--success-chroma) * var(--c-300)) var(--success-hue));
  --color-success-400: oklch(var(--l-400) calc(var(--success-chroma) * var(--c-400)) var(--success-hue));
  --color-success-500: oklch(var(--l-500) calc(var(--success-chroma) * var(--c-500)) var(--success-hue));
  --color-success-600: oklch(var(--l-600) calc(var(--success-chroma) * var(--c-600)) var(--success-hue));
  --color-success-700: oklch(var(--l-700) calc(var(--success-chroma) * var(--c-700)) var(--success-hue));
  --color-success-800: oklch(var(--l-800) calc(var(--success-chroma) * var(--c-800)) var(--success-hue));
  --color-success-900: oklch(var(--l-900) calc(var(--success-chroma) * var(--c-900)) var(--success-hue));
  --color-success-950: oklch(var(--l-950) calc(var(--success-chroma) * var(--c-950)) var(--success-hue));

  /* ===== WARNING SCALE ===== */
  --color-warning-50: oklch(var(--l-50) calc(var(--warning-chroma) * var(--c-50)) var(--warning-hue));
  --color-warning-100: oklch(var(--l-100) calc(var(--warning-chroma) * var(--c-100)) var(--warning-hue));
  --color-warning-200: oklch(var(--l-200) calc(var(--warning-chroma) * var(--c-200)) var(--warning-hue));
  --color-warning-300: oklch(var(--l-300) calc(var(--warning-chroma) * var(--c-300)) var(--warning-hue));
  --color-warning-400: oklch(var(--l-400) calc(var(--warning-chroma) * var(--c-400)) var(--warning-hue));
  --color-warning-500: oklch(var(--l-500) calc(var(--warning-chroma) * var(--c-500)) var(--warning-hue));
  --color-warning-600: oklch(var(--l-600) calc(var(--warning-chroma) * var(--c-600)) var(--warning-hue));
  --color-warning-700: oklch(var(--l-700) calc(var(--warning-chroma) * var(--c-700)) var(--warning-hue));
  --color-warning-800: oklch(var(--l-800) calc(var(--warning-chroma) * var(--c-800)) var(--warning-hue));
  --color-warning-900: oklch(var(--l-900) calc(var(--warning-chroma) * var(--c-900)) var(--warning-hue));
  --color-warning-950: oklch(var(--l-950) calc(var(--warning-chroma) * var(--c-950)) var(--warning-hue));

  /* ===== ERROR SCALE ===== */
  --color-error-50: oklch(var(--l-50) calc(var(--error-chroma) * var(--c-50)) var(--error-hue));
  --color-error-100: oklch(var(--l-100) calc(var(--error-chroma) * var(--c-100)) var(--error-hue));
  --color-error-200: oklch(var(--l-200) calc(var(--error-chroma) * var(--c-200)) var(--error-hue));
  --color-error-300: oklch(var(--l-300) calc(var(--error-chroma) * var(--c-300)) var(--error-hue));
  --color-error-400: oklch(var(--l-400) calc(var(--error-chroma) * var(--c-400)) var(--error-hue));
  --color-error-500: oklch(var(--l-500) calc(var(--error-chroma) * var(--c-500)) var(--error-hue));
  --color-error-600: oklch(var(--l-600) calc(var(--error-chroma) * var(--c-600)) var(--error-hue));
  --color-error-700: oklch(var(--l-700) calc(var(--error-chroma) * var(--c-700)) var(--error-hue));
  --color-error-800: oklch(var(--l-800) calc(var(--error-chroma) * var(--c-800)) var(--error-hue));
  --color-error-900: oklch(var(--l-900) calc(var(--error-chroma) * var(--c-900)) var(--error-hue));
  --color-error-950: oklch(var(--l-950) calc(var(--error-chroma) * var(--c-950)) var(--error-hue));

  /* ===== NEUTRAL SCALE ===== */
  /* Brand-tinted neutrals for visual cohesion */
  --neutral-chroma: 0.015;
  /* Subtle brand temperature */
  --color-neutral-50: oklch(var(--l-50) var(--neutral-chroma) var(--brand-hue));
  --color-neutral-100: oklch(var(--l-100) var(--neutral-chroma) var(--brand-hue));
  --color-neutral-200: oklch(var(--l-200) calc(var(--neutral-chroma) * 1.5) var(--brand-hue));
  --color-neutral-300: oklch(var(--l-300) calc(var(--neutral-chroma) * 2) var(--brand-hue));
  --color-neutral-400: oklch(var(--l-400) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-500: oklch(var(--l-500) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-600: oklch(var(--l-600) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-700: oklch(var(--l-700) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-800: oklch(var(--l-800) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-900: oklch(var(--l-900) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));
  --color-neutral-950: oklch(var(--l-950) calc(var(--neutral-chroma) * 2.5) var(--brand-hue));

  /* ===== ABSOLUTE COLORS ===== */
  --color-black: oklch(0% 0 0);
  --color-white: oklch(100% 0 0);
}

/* ===== WIDE GAMUT DISPLAY ENHANCEMENT ===== */
/* Automatic chroma boost for modern displays */
@supports (color: oklch(50% 0.2 180)) {
  @media (color-gamut: p3) {
    :root {
      --brand-chroma: var(--brand-chroma-p3);
      --secondary-chroma: var(--secondary-chroma-p3);
      --accent-chroma: var(--accent-chroma-p3);
      --success-chroma: var(--success-chroma-p3);
      --warning-chroma: var(--warning-chroma-p3);
      --error-chroma: var(--error-chroma-p3);
    }
  }

  @media (color-gamut: rec2020) {
    :root {
      /* Future ultra-wide gamut support */
      --brand-chroma: calc(var(--brand-chroma-p3) * 1.2);
      --secondary-chroma: calc(var(--secondary-chroma-p3) * 1.2);
      --accent-chroma: calc(var(--accent-chroma-p3) * 1.2);
      --success-chroma: calc(var(--success-chroma-p3) * 1.2);
      --warning-chroma: calc(var(--warning-chroma-p3) * 1.2);
      --error-chroma: calc(var(--error-chroma-p3) * 1.2);
    }
  }
}

/*
================================================================================
🚀 QUICK START GUIDE
================================================================================

1. 📝 TO ADD A NEW COLOR FAMILY:
   • Add hue + chroma variables at the top (line ~30)
   • Copy any existing scale section (e.g., success)
   • Replace "success" with your new name
   • Update hue/chroma references

2. 🎨 TO CUSTOMIZE FOR A NEW PROJECT:
   • Change --brand-hue (line ~31)
   • Adjust chroma values based on the reference guide
   • Test with the OKLCH generator tool
   • Validate APCA contrast with semantic tokens

3. 🔧 TO USE IN COMPONENTS:
   • Prefer semantic tokens (--text-primary, --interactive-primary)
   • Use direct scales only for custom components
   • Always test dark mode and high contrast

4. 📱 RESPONSIVE DESIGN:
   • Colors automatically enhance on P3/wide-gamut displays
   • Dark mode handled via prefers-color-scheme
   • High contrast via prefers-contrast
   • Legacy fallbacks included

================================================================================
*/
